#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EAS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MyBD")]
	public partial class HDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertHospital(Hospital instance);
    partial void UpdateHospital(Hospital instance);
    partial void DeleteHospital(Hospital instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public HDBDataContext() : 
				base(global::EAS.Properties.Settings.Default.EASDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<Hospital> Hospitals
		{
			get
			{
				return this.GetTable<Hospital>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Sid;
		
		private int _Uid;
		
		private int _Hid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSidChanging(int value);
    partial void OnSidChanged();
    partial void OnUidChanging(int value);
    partial void OnUidChanged();
    partial void OnHidChanging(int value);
    partial void OnHidChanged();
    #endregion
		
		public Service()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Sid
		{
			get
			{
				return this._Sid;
			}
			set
			{
				if ((this._Sid != value))
				{
					this.OnSidChanging(value);
					this.SendPropertyChanging();
					this._Sid = value;
					this.SendPropertyChanged("Sid");
					this.OnSidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="Int NOT NULL")]
		public int Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hid", DbType="Int NOT NULL")]
		public int Hid
		{
			get
			{
				return this._Hid;
			}
			set
			{
				if ((this._Hid != value))
				{
					this.OnHidChanging(value);
					this.SendPropertyChanging();
					this._Hid = value;
					this.SendPropertyChanged("Hid");
					this.OnHidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hospital")]
	public partial class Hospital : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Hid;
		
		private string _HName;
		
		private string _HCity;
		
		private string _HCountry;
		
		private double _HLat;
		
		private double _HLng;
		
		private System.Nullable<double> _HDistance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHidChanging(int value);
    partial void OnHidChanged();
    partial void OnHNameChanging(string value);
    partial void OnHNameChanged();
    partial void OnHCityChanging(string value);
    partial void OnHCityChanged();
    partial void OnHCountryChanging(string value);
    partial void OnHCountryChanged();
    partial void OnHLatChanging(double value);
    partial void OnHLatChanged();
    partial void OnHLngChanging(double value);
    partial void OnHLngChanged();
    partial void OnHDistanceChanging(System.Nullable<double> value);
    partial void OnHDistanceChanged();
    #endregion
		
		public Hospital()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Hid
		{
			get
			{
				return this._Hid;
			}
			set
			{
				if ((this._Hid != value))
				{
					this.OnHidChanging(value);
					this.SendPropertyChanging();
					this._Hid = value;
					this.SendPropertyChanged("Hid");
					this.OnHidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string HName
		{
			get
			{
				return this._HName;
			}
			set
			{
				if ((this._HName != value))
				{
					this.OnHNameChanging(value);
					this.SendPropertyChanging();
					this._HName = value;
					this.SendPropertyChanged("HName");
					this.OnHNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HCity", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string HCity
		{
			get
			{
				return this._HCity;
			}
			set
			{
				if ((this._HCity != value))
				{
					this.OnHCityChanging(value);
					this.SendPropertyChanging();
					this._HCity = value;
					this.SendPropertyChanged("HCity");
					this.OnHCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HCountry", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string HCountry
		{
			get
			{
				return this._HCountry;
			}
			set
			{
				if ((this._HCountry != value))
				{
					this.OnHCountryChanging(value);
					this.SendPropertyChanging();
					this._HCountry = value;
					this.SendPropertyChanged("HCountry");
					this.OnHCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HLat", DbType="Float NOT NULL")]
		public double HLat
		{
			get
			{
				return this._HLat;
			}
			set
			{
				if ((this._HLat != value))
				{
					this.OnHLatChanging(value);
					this.SendPropertyChanging();
					this._HLat = value;
					this.SendPropertyChanged("HLat");
					this.OnHLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HLng", DbType="Float NOT NULL")]
		public double HLng
		{
			get
			{
				return this._HLng;
			}
			set
			{
				if ((this._HLng != value))
				{
					this.OnHLngChanging(value);
					this.SendPropertyChanging();
					this._HLng = value;
					this.SendPropertyChanged("HLng");
					this.OnHLngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDistance", DbType="Float")]
		public System.Nullable<double> HDistance
		{
			get
			{
				return this._HDistance;
			}
			set
			{
				if ((this._HDistance != value))
				{
					this.OnHDistanceChanging(value);
					this.SendPropertyChanging();
					this._HDistance = value;
					this.SendPropertyChanged("HDistance");
					this.OnHDistanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Uid;
		
		private string _UName;
		
		private string _UPas;
		
		private bool _UType_;
		
		private string _PName;
		
		private System.Nullable<System.DateTime> _PDOB;
		
		private string _PMobileNo;
		
		private string _PEmail;
		
		private System.Nullable<bool> _PGender;
		
		private string _PAddress;
		
		private double _PLat;
		
		private double _PLng;
		
		private string _PBloodGrp;
		
		private System.Nullable<bool> _PDiabetes;
		
		private string _PBloodSugar;
		
		private System.Nullable<bool> _PPressure;
		
		private string _PAvgPressure;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUidChanging(int value);
    partial void OnUidChanged();
    partial void OnUNameChanging(string value);
    partial void OnUNameChanged();
    partial void OnUPasChanging(string value);
    partial void OnUPasChanged();
    partial void OnUType_Changing(bool value);
    partial void OnUType_Changed();
    partial void OnPNameChanging(string value);
    partial void OnPNameChanged();
    partial void OnPDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnPDOBChanged();
    partial void OnPMobileNoChanging(string value);
    partial void OnPMobileNoChanged();
    partial void OnPEmailChanging(string value);
    partial void OnPEmailChanged();
    partial void OnPGenderChanging(System.Nullable<bool> value);
    partial void OnPGenderChanged();
    partial void OnPAddressChanging(string value);
    partial void OnPAddressChanged();
    partial void OnPLatChanging(double value);
    partial void OnPLatChanged();
    partial void OnPLngChanging(double value);
    partial void OnPLngChanged();
    partial void OnPBloodGrpChanging(string value);
    partial void OnPBloodGrpChanged();
    partial void OnPDiabetesChanging(System.Nullable<bool> value);
    partial void OnPDiabetesChanged();
    partial void OnPBloodSugarChanging(string value);
    partial void OnPBloodSugarChanged();
    partial void OnPPressureChanging(System.Nullable<bool> value);
    partial void OnPPressureChanged();
    partial void OnPAvgPressureChanging(string value);
    partial void OnPAvgPressureChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UName
		{
			get
			{
				return this._UName;
			}
			set
			{
				if ((this._UName != value))
				{
					this.OnUNameChanging(value);
					this.SendPropertyChanging();
					this._UName = value;
					this.SendPropertyChanged("UName");
					this.OnUNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPas", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UPas
		{
			get
			{
				return this._UPas;
			}
			set
			{
				if ((this._UPas != value))
				{
					this.OnUPasChanging(value);
					this.SendPropertyChanging();
					this._UPas = value;
					this.SendPropertyChanged("UPas");
					this.OnUPasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[UType ]", Storage="_UType_", DbType="Bit NOT NULL")]
		public bool UType_
		{
			get
			{
				return this._UType_;
			}
			set
			{
				if ((this._UType_ != value))
				{
					this.OnUType_Changing(value);
					this.SendPropertyChanging();
					this._UType_ = value;
					this.SendPropertyChanged("UType_");
					this.OnUType_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PName", DbType="VarChar(50)")]
		public string PName
		{
			get
			{
				return this._PName;
			}
			set
			{
				if ((this._PName != value))
				{
					this.OnPNameChanging(value);
					this.SendPropertyChanging();
					this._PName = value;
					this.SendPropertyChanged("PName");
					this.OnPNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDOB", DbType="Date")]
		public System.Nullable<System.DateTime> PDOB
		{
			get
			{
				return this._PDOB;
			}
			set
			{
				if ((this._PDOB != value))
				{
					this.OnPDOBChanging(value);
					this.SendPropertyChanging();
					this._PDOB = value;
					this.SendPropertyChanged("PDOB");
					this.OnPDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMobileNo", DbType="VarChar(50)")]
		public string PMobileNo
		{
			get
			{
				return this._PMobileNo;
			}
			set
			{
				if ((this._PMobileNo != value))
				{
					this.OnPMobileNoChanging(value);
					this.SendPropertyChanging();
					this._PMobileNo = value;
					this.SendPropertyChanged("PMobileNo");
					this.OnPMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PEmail", DbType="VarChar(50)")]
		public string PEmail
		{
			get
			{
				return this._PEmail;
			}
			set
			{
				if ((this._PEmail != value))
				{
					this.OnPEmailChanging(value);
					this.SendPropertyChanging();
					this._PEmail = value;
					this.SendPropertyChanged("PEmail");
					this.OnPEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PGender", DbType="Bit")]
		public System.Nullable<bool> PGender
		{
			get
			{
				return this._PGender;
			}
			set
			{
				if ((this._PGender != value))
				{
					this.OnPGenderChanging(value);
					this.SendPropertyChanging();
					this._PGender = value;
					this.SendPropertyChanged("PGender");
					this.OnPGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAddress", DbType="VarChar(50)")]
		public string PAddress
		{
			get
			{
				return this._PAddress;
			}
			set
			{
				if ((this._PAddress != value))
				{
					this.OnPAddressChanging(value);
					this.SendPropertyChanging();
					this._PAddress = value;
					this.SendPropertyChanged("PAddress");
					this.OnPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLat", DbType="Float")]
		public double PLat
		{
			get
			{
				return this._PLat;
			}
			set
			{
				if ((this._PLat != value))
				{
					this.OnPLatChanging(value);
					this.SendPropertyChanging();
					this._PLat = value;
					this.SendPropertyChanged("PLat");
					this.OnPLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLng", DbType="Float")]
		public double PLng
		{
			get
			{
				return this._PLng;
			}
			set
			{
				if ((this._PLng != value))
				{
					this.OnPLngChanging(value);
					this.SendPropertyChanging();
					this._PLng = value;
					this.SendPropertyChanged("PLng");
					this.OnPLngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBloodGrp", DbType="VarChar(50)")]
		public string PBloodGrp
		{
			get
			{
				return this._PBloodGrp;
			}
			set
			{
				if ((this._PBloodGrp != value))
				{
					this.OnPBloodGrpChanging(value);
					this.SendPropertyChanging();
					this._PBloodGrp = value;
					this.SendPropertyChanged("PBloodGrp");
					this.OnPBloodGrpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDiabetes", DbType="Bit")]
		public System.Nullable<bool> PDiabetes
		{
			get
			{
				return this._PDiabetes;
			}
			set
			{
				if ((this._PDiabetes != value))
				{
					this.OnPDiabetesChanging(value);
					this.SendPropertyChanging();
					this._PDiabetes = value;
					this.SendPropertyChanged("PDiabetes");
					this.OnPDiabetesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBloodSugar", DbType="VarChar(50)")]
		public string PBloodSugar
		{
			get
			{
				return this._PBloodSugar;
			}
			set
			{
				if ((this._PBloodSugar != value))
				{
					this.OnPBloodSugarChanging(value);
					this.SendPropertyChanging();
					this._PBloodSugar = value;
					this.SendPropertyChanged("PBloodSugar");
					this.OnPBloodSugarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPressure", DbType="Bit")]
		public System.Nullable<bool> PPressure
		{
			get
			{
				return this._PPressure;
			}
			set
			{
				if ((this._PPressure != value))
				{
					this.OnPPressureChanging(value);
					this.SendPropertyChanging();
					this._PPressure = value;
					this.SendPropertyChanged("PPressure");
					this.OnPPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAvgPressure", DbType="VarChar(50)")]
		public string PAvgPressure
		{
			get
			{
				return this._PAvgPressure;
			}
			set
			{
				if ((this._PAvgPressure != value))
				{
					this.OnPAvgPressureChanging(value);
					this.SendPropertyChanging();
					this._PAvgPressure = value;
					this.SendPropertyChanged("PAvgPressure");
					this.OnPAvgPressureChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
